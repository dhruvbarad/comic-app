Index: functions/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/functions/index.js b/functions/index.js
--- a/functions/index.js	(revision c893ff9738eb7211ab938e57d6a48fd3fca853e3)
+++ b/functions/index.js	(date 1722283430016)
@@ -1,55 +1,45 @@
-/* eslint-disable @typescript-eslint/no-var-requires */
-/* eslint-disable no-undef */
 const functions = require("firebase-functions");
 const express = require("express");
 const path = require("path");
 const cors = require('cors');
+const axios = require('axios');
 require('dotenv').config();

-const rootDirectory = path.resolve(__dirname, '..');
 const app = express();

-const API_HASH = process.env.MARVEL_API_HASH;
-const PUBLIC_KEY = process.env.MARVEL_PUBLIC_KEY;
-const SUPERHERO_API_TOKEN = process.env.SUPERHERO_API_TOKEN;
-
-const MARVEL_API_BASE_URL = "https://gateway.marvel.com:443";
-const SUPERHERO_API_BASE_URL = `https://superheroapi.com/api.php/${SUPERHERO_API_TOKEN}`;
-
-app.use(cors({ origin: true }));
-app.use('/dist', express.static(rootDirectory + '/dist'));
-app.use('/assets', express.static(rootDirectory + '/dist/assets'));
+app.use(cors({origin: true}));
+app.use(express.static(path.join(__dirname, 'dist')));

 const marvelIds = [
-    { id: 1009368, name: "Iron Man" },
-    { id: 1009220, name: "Captain America" },
-    { id: 1009664, name: "Thor" },
-    { id: 1009351, name: "Hulk" },
-    { id: 1009189, name: "Black Widow" },
-    { id: 1009338, name: "Hawkeye" },
-    { id: 1009610, name: "Spider-Man (Peter Parker)" },
-    { id: 1009718, name: "Wolverine" },
-    { id: 1009268, name: "Deadpool" },
-    { id: 1009407, name: "Loki" },
-    { id: 1009187, name: "Black Panther" },
-    { id: 1010801, name: "Ant-Man (Scott Lang)" }
+    {id: 1009368, name: "Iron Man"},
+    {id: 1009220, name: "Captain America"},
+    {id: 1009664, name: "Thor"},
+    {id: 1009351, name: "Hulk"},
+    {id: 1009189, name: "Black Widow"},
+    {id: 1009338, name: "Hawkeye"},
+    {id: 1009610, name: "Spider-Man (Peter Parker)"},
+    {id: 1009718, name: "Wolverine"},
+    {id: 1009268, name: "Deadpool"},
+    {id: 1009407, name: "Loki"},
+    {id: 1009187, name: "Black Panther"},
+    {id: 1010801, name: "Ant-Man (Scott Lang)"}
 ]

 const starWarsIds = [
-    { id: 418, name: "Luke Skywalker" },
-    { id: 208, name: "Darth Vader" },
-    { id: 729, name: "Yoda" },
-    { id: 307, name: "Han Solo" },
-    { id: 127, name: "Boba Fett" },
+    {id: 418, name: "Luke Skywalker"},
+    {id: 208, name: "Darth Vader"},
+    {id: 729, name: "Yoda"},
+    {id: 307, name: "Han Solo"},
+    {id: 127, name: "Boba Fett"},
 ]

 const dcIds = [
-    { id: 70, name: "Batman" },
-    { id: 644, name: "Superman" },
-    { id: 38, name: "Aquaman" },
-    { id: 720, name: "Wonder Woman" },
-    { id: 194, name: "Cyborg" },
-    { id: 263, name: "Flash" },
+    {id: 70, name: "Batman"},
+    {id: 644, name: "Superman"},
+    {id: 38, name: "Aquaman"},
+    {id: 720, name: "Wonder Woman"},
+    {id: 194, name: "Cyborg"},
+    {id: 263, name: "Flash"},
 ]

 const marvelCharacters = marvelIds.map(item => getCharacter(item.id, "marvel"));
@@ -59,7 +49,7 @@
 app.get("/marvel_characters", (req, res) => {
     Promise.all(marvelCharacters)
         .then(responses => {
-            res.json({ "characters": responses });
+            res.json({"characters": responses});
         })
         .catch(error => {
             console.error('Error:', error);
@@ -69,7 +59,7 @@
 app.get("/starwars_characters", (req, res) => {
     Promise.all(starWarsCharacters)
         .then(responses => {
-            res.json({ "characters": responses });
+            res.json({"characters": responses});
         })
         .catch(error => {
             console.error('Error:', error);
@@ -79,7 +69,7 @@
 app.get("/dc_characters", (req, res) => {
     Promise.all(dcCharacters)
         .then(responses => {
-            res.json({ "characters": responses });
+            res.json({"characters": responses});
         })
         .catch(error => {
             console.error('Error:', error);
@@ -89,7 +79,7 @@
 app.get("/marvel_characters/:id", (req, res) => {
     getCharacterDetails(req.params.id, "marvel")
         .then(responses => {
-            res.json({ "Latest comics": responses.comics });
+            res.json({"Latest comics": responses.comics});
         })
         .catch(error => {
             console.error('Error:', error);
@@ -98,8 +88,8 @@

 app.get("/starwars_characters/:id", (req, res) => {
     getCharacterDetails(req.params.id, "star-wars")
-        .then(() => {
-            res.json({ code: 404 });
+        .then(responses => {
+            res.json({"Stats": responses.stats});
         })
         .catch(error => {
             console.error('Error:', error);
@@ -108,27 +98,28 @@

 app.get("/dc_characters/:id", (req, res) => {
     getCharacterDetails(req.params.id, "dc")
-        .then(() => {
-            res.json({ code: 404 });
+        .then(responses => {
+            res.json({"Stats": responses.stats});
         })
         .catch(error => {
             console.error('Error:', error);
         });
 });

+
 async function getCharacter(id, type) {
     if (type === 'marvel') {
         try {
-            const response = await fetch(`${MARVEL_API_BASE_URL}/v1/public/characters/${id}?apikey=${PUBLIC_KEY}&hash=${API_HASH}&ts=1`);
-            const result = await response.json();
+            const response = await axios.get(`${MARVEL_API_BASE_URL}/v1/public/characters/${id}?apikey=${PUBLIC_KEY}&hash=${API_HASH}&ts=1`);
+            const result = response.data;
             if (result.code === 404) {
-                return { code: 404 };
+                return {code: 404};
             }
             return {
                 copyRightHTML: result.attributionHTML,
                 id: id,
                 name: result.data.results[0].name,
-                description: result.data.results[0].description,
+                descriptions: [result.data.results[0].description],
                 imageSource: result.data.results[0].thumbnail.path + '.' + result.data.results[0].thumbnail.extension,
                 type: type
             };
@@ -140,17 +131,24 @@

     if (type === 'dc' || type === "star-wars") {
         try {
-            const response = await fetch(`${SUPERHERO_API_BASE_URL}/${id}`);
-            const result = await response.json();
+            const response = await axios.get(`${SUPERHERO_API_BASE_URL}/${id}`);
+            const result = response.data;
             if (result.response !== "success") {
-                return { code: 404 };
+                return {code: 404};
             }
-            const description = `Place of birth: ${result.biography["place-of-birth"]}\nFirst appearance: ${result.biography["first-appearance"]}`
+            let placeOfBirth = ""
+            let firstAppearance = ""
+            if (result.biography["place-of-birth"] !== "-") {
+                placeOfBirth = `Place of birth: ${result.biography["place-of-birth"]}\n`
+            }
+            if (result.biography["first-appearance"] !== "-") {
+                firstAppearance = `First appearance: ${result.biography["first-appearance"]}\n`
+            }
             return {
                 copyRightHTML: "<a href=\"https://superheroapi.com\">Data provided by superheroapi.com</a>",
                 id: id,
                 name: result.name,
-                description: description,
+                descriptions: [placeOfBirth, firstAppearance],
                 imageSource: result.image.url,
                 type: type
             };
@@ -164,19 +162,19 @@
 async function getCharacterDetails(id, type) {
     if (type === "marvel") {
         try {
-            const responseComics = await fetch(`${MARVEL_API_BASE_URL}/v1/public/characters/${id}/comics?limit=5&apikey=${PUBLIC_KEY}&hash=${API_HASH}&ts=1&orderBy=-focDate`);
-            const resultComics = await responseComics.json();
+            const responseComics = await axios.get(`${MARVEL_API_BASE_URL}/v1/public/characters/${id}/comics?limit=5&apikey=${PUBLIC_KEY}&hash=${API_HASH}&ts=1&orderBy=-focDate`);
+            const resultComics = responseComics.data;
             if (resultComics.data.results.length === 0) {
-                return { code: 404 }
+                return {code: 404}
             }
             const comics = resultComics.data.results.map((comic) => new Object({
                 copyRightHTML: resultComics.attributionHTML,
                 title: comic.title,
-                description: comic.description,
+                descriptions: [comic.description],
                 imageSource: comic.thumbnail.path + '.' + comic.thumbnail.extension
             }));

-            return { comics: comics }
+            return {comics: comics}
         } catch (error) {
             console.error('Error: ', error);
             throw error;
@@ -184,7 +182,37 @@
     }

     if (type === "dc" || type === "star-wars") {
-        //TODO: From superheroapi, form a components listing details
+        try {
+            const response = await axios.get(`${SUPERHERO_API_BASE_URL}/${id}`);
+            const result = response.data;
+            if (result.response !== "success") {
+                return {code: 404};
+            }
+            const intelligence = new Object({
+                copyRightHTML: "<a href=\"https://superheroapi.com\">Data provided by superheroapi.com</a>",
+                title: "Intelligence",
+                descriptions: [result.powerstats.intelligence],
+                imageSource: ""
+            })
+            const strength = new Object({
+                copyRightHTML: "<a href=\"https://superheroapi.com\">Data provided by superheroapi.com</a>",
+                title: "Strength",
+                descriptions: [result.powerstats.strength],
+                imageSource: ""
+            })
+            const speed = new Object({
+                copyRightHTML: "<a href=\"https://superheroapi.com\">Data provided by superheroapi.com</a>",
+                title: "Speed",
+                descriptions: [result.powerstats.speed],
+                imageSource: ""
+            })
+            const stats = [intelligence, strength, speed];
+
+            return {stats: stats}
+        } catch (error) {
+            console.error('Error: ', error);
+            throw error;
+        }
     }
 }

@@ -192,4 +220,4 @@
     res.send(404).json({ data: "Not found" });
 });

-exports.app = functions.https.onRequest(app);
\ No newline at end of file
+exports.app = functions.https.onRequest(app);
Index: functions/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/functions/package.json b/functions/package.json
--- a/functions/package.json	(revision c893ff9738eb7211ab938e57d6a48fd3fca853e3)
+++ b/functions/package.json	(date 1722283507674)
@@ -13,6 +13,7 @@
   },
   "main": "index.js",
   "dependencies": {
+    "axios": "^1.7.2",
     "cors": "^2.8.5",
     "dotenv": "^16.3.1",
     "express": "^4.18.2",
